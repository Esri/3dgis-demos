name: Build & Deploy Changed Apps

on:
  push:
    branches: [main]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # ensures full git history is available for diff

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Restore dist cache
        uses: actions/cache@v4
        with:
          path: dist
          key: dist-${{ github.sha }}
          restore-keys: |
            dist-

      - name: Detect changed apps and root
        id: changes
        run: |
          ROOT_CHANGED=false

          # Get list of all changed files between the two commits
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})

          # Look for anything outside the apps/ directory
          for file in $CHANGED_FILES; do
            if [[ ! "$file" =~ ^demos/ ]]; then
              ROOT_CHANGED=true
              break
            fi
          done

          echo "Root changed: $ROOT_CHANGED"

          if $ROOT_CHANGED; then
            # All apps should be built
            apps=$(ls apps)
            echo "All apps marked for build due to root-level changes."
          else
            # Extract changed apps from paths under demos/
            apps=$(echo "$CHANGED_FILES" | grep '^demos/' | cut -d/ -f2 | sort -u)
          fi

          if [ -z "$apps" ]; then
            echo "No app changes detected."
            echo "changed=" >> $GITHUB_OUTPUT
          else
            changed=$(echo "$apps" | paste -sd ',' -)
            echo "Changed apps: $changed"
            echo "changed=$changed" >> $GITHUB_OUTPUT
          fi

      - name: Build changed apps
        if: steps.changes.outputs.changed != ''
        run: |
          for app in $(echo "${{ steps.changes.outputs.changed }}" | tr ',' '\n'); do
            echo "ðŸ”¨ Building $app..."
            npm run build --workspace=$app
          done

      - name: Generate landing page
        if: steps.changes.outputs.changed != ''
        run: node scripts/generate-landing.js

      - name: Setup Pages
        if: steps.changes.outputs.changed != ''
        uses: actions/configure-pages@v4

      - name: Upload artifact
        if: steps.changes.outputs.changed != ''
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      - name: Deploy to GitHub Pages
        if: steps.changes.outputs.changed != ''
        id: deployment
        uses: actions/deploy-pages@v4
