name: Build & Deploy Changed Apps

on:
  push:
    branches: [main]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # ensures full git history is available for diff

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Restore dist cache
        uses: actions/cache@v4
        with:
          path: dist
          key: dist-${{ github.sha }}
          restore-keys: |
            dist-

      - name: Detect changed apps
        id: changes
        run: |
          changed_apps=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^demos/' | cut -d/ -f2 | sort -u | paste -sd ',' -)
          echo "Changed apps: $changed_apps"
          echo "changed=$changed_apps" >> $GITHUB_OUTPUT

      - name: Build changed apps
        if: steps.changes.outputs.changed != ''
        run: |
          for app in $(echo "${{ steps.changes.outputs.changed }}" | tr ',' '\n'); do
            echo "ðŸ”¨ Building $app..."
            npm run build --workspace=$app
          done

      - name: Generate landing page
        run: node scripts/generate-landing.js

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
